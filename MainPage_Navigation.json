{
  "typ": "scenario",
  "obj": "MainPage_Navigation",
  "desc": "Navigation based on Dropdown",
  "doc": "Demonstrating Navigations from Main Page to Sub Pages",
  "st_ts": "2025-05-04T16:10:56.202873",
  "nd_ts": "2025-05-04T16:11:19.958827",
  "tasks": [
    {
      "typ": "task",
      "obj": "task_1",
      "desc": "Check Main Page without Login",
      "doc": "Check if only Search & Submit page Navigation is shown, if not logged in ",
      "src": "    def task_1(self, _page, url) -> dict:\n        \"\"\" Check if only Search & Submit page Navigation is shown, if not logged in \"\"\"\n\n        self._info(\"Checking No Login - Navigation Menu Options\")\n        _page.goto(f\"{url}/\")\n\n        # Click to open the dropdown\n        _page.get_by_role(\"button\", name=\"Navigate\").click()\n\n        # Wait for the listbox or menu to appear\n        _page.get_by_role(\"menu\").wait_for()\n\n        # Get all options by role menuitem, depending on markup\n        options = _page.get_by_role(\"menuitem\").all()\n        option_texts = [opt.inner_text() for opt in options]\n\n        # Check if only ['Home', 'Search & Submit'] is present in the dropdown options when not logged in\n        self._chk(act=option_texts, ref=['Home', 'Search & Submit'])\n\n        time.sleep(2)\n",
      "inp": {
        "url": "**"
      },
      "out": null,
      "vars": {
        "url": "**",
        "headless": false
      },
      "st_ts": "2025-05-04T16:11:06.865907",
      "nd_ts": "2025-05-04T16:11:11.822588",
      "lines": {
        "4": {
          "typ": "log",
          "ts": "2025-05-04T16:11:06.865907",
          "lvl": "INFO",
          "msg": "Checking No Login - Navigation Menu Options"
        },
        "18": {
          "typ": "chk",
          "ts": "2025-05-04T16:11:09.819405",
          "act": [
            "list",
            [
              "Home",
              "Search & Submit"
            ]
          ],
          "ref": [
            "list",
            [
              "Home",
              "Search & Submit"
            ]
          ],
          "rslt": true
        }
      }
    },
    {
      "typ": "task",
      "obj": "task_2",
      "desc": "Check if Home page is navigated correctly",
      "doc": "Check if Home page is navigated correctly ",
      "src": "    def task_2(self, _page, url):\n        \"\"\" Check if Home page is navigated correctly \"\"\"\n\n        self._info(\"Checking Home Page Navigation\")\n        _page.goto(f\"{url}/\")\n\n        # Click to open the dropdown\n        _page.get_by_role(\"button\", name=\"Navigate\").click()\n\n        # Wait for the listbox or menu to appear\n        _page.get_by_role(\"menu\").wait_for()\n\n        # Click on the \"Home\" option\n        _page.get_by_role(\"menuitem\", name=\"Home\").click()\n\n        # Wait for the navigation to complete\n        # or until a specific element is visible on the new page\n        _page.wait_for_url(\"**/\")\n\n        # Check if the navigation is successful\n        self._chk(act=_page.url, ref=url)\n\n        time.sleep(3)\n        # Take a screenshot and pin it for reference\n        img = f\"{int(datetime.now().timestamp())}.png\"\n        _page.screenshot(path=img)\n        self._pin(loc=img)\n",
      "inp": {
        "url": "**"
      },
      "out": null,
      "vars": {
        "url": "**",
        "headless": false
      },
      "st_ts": "2025-05-04T16:11:11.822588",
      "nd_ts": "2025-05-04T16:11:15.790507",
      "lines": {
        "4": {
          "typ": "log",
          "ts": "2025-05-04T16:11:11.822588",
          "lvl": "INFO",
          "msg": "Checking Home Page Navigation"
        },
        "21": {
          "typ": "chk",
          "ts": "2025-05-04T16:11:12.656657",
          "act": [
            "str",
            "**/"
          ],
          "ref": [
            "str",
            "**"
          ],
          "rslt": false
        },
        "27": {
          "typ": "pin",
          "ts": "2025-05-04T16:11:15.790507",
          "path": "1746355275.png",
          "url": "1746355275.png"
        }
      }
    },
    {
      "typ": "task",
      "obj": "task_3",
      "desc": "Check if Search & Submit page is navigated correctly",
      "doc": "Check if Search & Submit page is navigated correctly ",
      "src": "    def task_3(self, _page, url):\n        \"\"\" Check if Search & Submit page is navigated correctly \"\"\"\n\n        self._info(\"Search Page Navigation\")\n        _page.goto(f\"{url}/\")\n\n        # Click to open the dropdown\n        _page.get_by_role(\"button\", name=\"Navigate\").click()\n\n        # Wait for the listbox or menu to appear\n        _page.get_by_role(\"menu\").wait_for()\n\n        # Click on the \"Search & Submit\" option\n        _page.get_by_role(\"menuitem\", name=\"Search & Submit\").click()\n\n        # wait for navigation to complete\n        # or until a specific element is visible on the new page\n        _page.wait_for_url(\"**/search\")\n\n        # Check if the navigation is successful\n        self._chk(act=_page.url, ref=f\"{url}/search\")\n\n        time.sleep(3)\n        # Take a screenshot and pin it for reference\n        img = f\"{int(datetime.now().timestamp())}.png\"\n        _page.screenshot(path=img)\n        self._pin(loc=img)\n",
      "inp": {
        "url": "**"
      },
      "out": null,
      "vars": {
        "url": "**",
        "headless": false
      },
      "st_ts": "2025-05-04T16:11:15.791514",
      "nd_ts": "2025-05-04T16:11:19.958827",
      "lines": {
        "4": {
          "typ": "log",
          "ts": "2025-05-04T16:11:15.791514",
          "lvl": "INFO",
          "msg": "Search Page Navigation"
        },
        "21": {
          "typ": "chk",
          "ts": "2025-05-04T16:11:16.847650",
          "act": [
            "str",
            "**/search"
          ],
          "ref": [
            "str",
            "**/search"
          ],
          "rslt": true
        },
        "27": {
          "typ": "pin",
          "ts": "2025-05-04T16:11:19.958827",
          "path": "1746355279.png",
          "url": "1746355279.png"
        }
      }
    }
  ]
}